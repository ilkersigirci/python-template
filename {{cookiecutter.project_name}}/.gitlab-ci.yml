stages:
  - lint
  - tests
  - package
  - doc

image: python:3.11

variables:
  SRC_PACKAGE: "src/{{cookiecutter.project_slug}}"

.base_ruff:
  stage: lint
  interruptible: true
  image:
    name: ghcr.io/astral-sh/ruff:0.9.2-alpine
  before_script:
    - cd $CI_PROJECT_DIR
    - ruff --version
  only:
    - merge_requests

Lint Check:
  extends: .base_ruff
  script:
    - ruff check ${SRC_PACKAGE} --output-format=gitlab > code-quality-report.json
  artifacts:
    reports:
      codequality: $CI_PROJECT_DIR/code-quality-report.json

Lint Format:
  extends: .base_ruff
  script:
    - ruff format ${SRC_PACKAGE} --diff

Tests:
  stage: tests
  script: |
    echo "*********** Disable Logger Outputs ***********"
    sed -i "s/log_cli = true/log_cli = false/" pyproject.toml
    echo "*********** Pip Update ***********"
    make -s update-pip
    echo "*********** Install the Project with Test Dependencies ***********"
    make -s install
    echo "*********** Test the Project ***********"
    make -s test-parallel
  only:
    - merge_requests
  # artifacts:
  #   reports:
  #     cobertura: coverage.xml

Package:
  stage: package
  rules:
    - if: $CI_COMMIT_TAG # Run this job when a tag is created manually
  script: |
    echo "*********** Rename `version` with COMMIT_TAG: $CI_COMMIT_TAG ***********"
    sed -i "s/0.0.0/$CI_COMMIT_TAG/" pyproject.toml
    echo "*********** Pip Update ***********"
    make -s update-pip
    echo "*********** Build Dependency Installation ***********"
    make -s install-build
    echo "*********** Build the Project ***********"
    make -s build
    echo "*********** Publish Dependency Installation ***********"
    make -s install-publish
    echo "*********** Publish the Project ***********"
    make -s publish

Pages:
  stage: doc
  script: |
    echo "*********** Pip Update ***********"
    make -s update-pip
    echo "*********** Docs Dependency Installation ***********"
    make -s install-doc
    echo "*********** Build the project documentation ***********"
    make -s doc
  # only:
  #   - main
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      when: manual
  artifacts:
    paths:
      - public
